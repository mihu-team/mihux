{"version":3,"file":"index.js","sources":["../mihux/index.tsx"],"sourcesContent":["import React, { Fragment, useContext, useEffect, useMemo, useState } from 'react'\nimport createStore from 'react-hooks-redux'\nimport { Map, fromJS } from 'immutable'\n\ninterface registerType {\n  state: object\n  sync?: object\n  async?: object\n}\ninterface MapOrObjType {\n  [key: string]: any\n}\n\ninterface doReducerType {\n  type: string\n  reducer: (state: MapOrObjType) => MapOrObjType\n}\n\n\nconst Context: React.Context<any> = React.createContext({})\n\nconst useComponent: (Component: new (props: any) => any) => any = (Component) => {\n  return (props: any) => {\n    const component = useMemo(() => new Component(props), []);\n    let [state, setState] = useState(component.state);\n    component.setState = setState;\n    useEffect(() => {\n      if (component.componentWillMount) {\n        component.componentWillMount()\n      }\n\n      if (component.componentDidMount) {\n        component.props = props;\n        component.state = state;\n        component.componentDidMount()\n      }\n\n      return () => {\n        if (component.componentWillUnMount) {\n          component.componentWillUnMount()\n        }\n      }\n    }, [])\n\n    component.props = props;\n    component.state = state;\n    return component.render()\n  };\n}\n\nclass Mihux {\n  private state: MapOrObjType = {}\n  private returnMap: MapOrObjType = {}\n  private store: MapOrObjType = {}\n  private mutation: MapOrObjType = {}\n  private mapState: MapOrObjType = {}\n  private set: (key: string, value: any) => MapOrObjType = (key, value) => {\n    let newState: MapOrObjType = Object.assign({}, this.store.getState())\n    let mapState: MapOrObjType = Map({ ...newState })\n    return mapState.set(key, value)\n  }\n  private setIn: (keys: string[], value: any) => MapOrObjType = (keys, value) => {\n    let newState: MapOrObjType = Object.assign({}, this.store.getState())\n    let mapState: MapOrObjType = Map({ ...newState })\n    return mapState.setIn(keys, value)\n  }\n  private merge: (newSatet: MapOrObjType) => MapOrObjType = (values) => {\n    let newState: MapOrObjType = Object.assign({}, this.store.getState())\n    let mapState: MapOrObjType = Map({ ...newState })\n    return mapState.merge({ ...values })\n  }\n  private getValue: (state: MapOrObjType, key: string) => any = (state, key) => {\n    let values: any = state.get(key)\n    try {\n      return values.toJS()\n    } catch {\n      return values\n    }\n  }\n  private mapMutation: (fns: MapOrObjType, model: string, flag?: string) => void = (fns, model, flag) => {\n    const me: this = this\n    const createReducer: (key: string, mapNewState: MapOrObjType) => void = (key, mapNewState) => {\n      const doReducer: () => doReducerType = () => {\n        return {\n          type: key,\n          reducer(state: MapOrObjType) {\n            let mapState: any = fromJS(state)\n            me.returnMap = mapState?.merge(mapNewState)\n            return me.returnMap.toJS()\n          },\n        }\n      }\n      this.store.dispatch(doReducer())\n      return me.returnMap\n    }\n    let builtIn: MapOrObjType = {\n      mutation: this.mutation[model],\n      setState: this.set,\n      setInState: this.setIn,\n      mergeState: this.merge,\n      getValue: this.getValue\n    }\n    Object.keys(fns).forEach((key) => {\n      switch (flag) {\n        case 'async':\n          let toUpperCaseKey: string = 'async' + key.replace(key[0], key[0].toUpperCase());\n          (this.mutation[model][toUpperCaseKey] = async (values: any) => {\n            return createReducer(toUpperCaseKey, await fns[key](this.returnMap, values, builtIn))\n          })\n          break;\n        default:\n          (this.mutation[model][key] = (values: any) => {\n            return createReducer(key, fns[key](this.returnMap, values, builtIn))\n          })\n      }\n    })\n  }\n  private init: () => { store: MapOrObjType; Provider: any } = () => {\n    const { Provider, store } = createStore({ initialState: { ...this.state } })\n    this.store = store\n    this.mapState = Map({ ...this.state })\n    this.returnMap = this.mapState\n    return { store, Provider }\n  }\n  public register: (registerProps: registerType) => void = (registerProps) => {\n    let { state = {}, sync = {}, async = {} } = registerProps\n    let model = '@__for_page__model__mihux__key__only_global__!_{0}_{0}_$_#!_'\n    this.mutation[model] = {}\n    this.mapMutation(sync, model)\n    this.mapMutation(async, model, 'async')\n    this.state = Object.assign({}, { ...state }, { ...this.mutation[model] })\n  }\n  public Provider: React.FC<any> = (props: any) => {\n    const { store, Provider } = this.init()\n    const newProps: { store: MapOrObjType } = { store }\n    const ProviderChildren: React.FC<any> = props => {\n      const { store } = useContext(Context)\n      const { children } = props\n      const state = store.useContext()\n      return (\n        <Context.Provider value={state}>\n          {children}\n        </Context.Provider>\n      )\n    }\n\n    return (\n      <Context.Provider value={newProps}>\n        <Provider>\n          <ProviderChildren {...props} />\n        </Provider>\n      </Context.Provider>\n    )\n  }\n}\n\nexport { Mihux, Context, useComponent }"],"names":[],"mappings":"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"}